/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require trix
 */

 trix-editor:empty:not(:focus)::before {
  color: #E7E5E4;
}

.trix-content a {
  text-decoration: underline;
  color: #3b82f6;
}

trix-toolbar .trix-button-row {
  display: block;
}

.trix-button-group {
  float: left;
}

.trix-button-group.trix-button-group--history-tools {
  float: right;
}

html:not(.fontawesome-i2svg-complete) .icon-substitute {
  display: inherit;
}

html.fontawesome-i2svg-complete .icon-substitute {
  display: none;
}

a.external-link:after {
  font-family: "Font Awesome 6 Pro";
  font-style: normal;
  content: "\f08e";
  margin-left: 0.5rem;
  font-weight: normal;
}

.actionable:hover .actions {
  display: inline-block;
}

.sidecar a:hover, .sidecar .active {
  color: rgb(230, 100, 37);
}

@media (prefers-color-scheme: dark) {
  .sidecar a {
    color: #d1d5db;
  }

  .sidecar:hover a {
    color: #f3f4f6;
  }

  .sidecar a:hover {
    color: rgb(230, 100, 37);
  }
}

.dt-switch-container .switch-button {
  transform: translateX(100%);
}

input.dt-switch.left-value:checked ~ .dt-switch-container {
  /* background: #e11d48; */
  background: #dc2626;
}

input.dt-switch.left-value:disabled:checked ~ .dt-switch-container {
  background: #ddd;
}

input.dt-switch.right-value:checked ~ .dt-switch-container {
  background: #4d7c0f;
}

input.dt-switch.right-value:disabled:checked ~ .dt-switch-container {
  background: #ddd;
}

input.dt-switch:disabled ~ .dt-switch-container {
  background: #ddd;
}

input.dt-switch.left-value:checked ~ .dt-switch-container .switch-button {
  transform: translateX(0);
}

input.dt-switch.right-value:checked ~ .dt-switch-container .switch-button {
  transform: translateX(195%);
}

@media (prefers-color-scheme: dark) {
  input.dt-switch.right-value:disabled:checked ~ .dt-switch-container {
    background: #444;
  }

  input.dt-switch.right-value:disabled:checked ~ .dt-switch-container .switch-button {
    background: #222;
  }

  input.dt-switch.right-value:disabled ~ label {
    color: #666;
  }

}

input[type="text"].is-invalid {
  border-color: #ef4444;
  background: url("octagon-exclamation.svg") no-repeat right 0.5rem center/1.5rem;
  background-size: 1rem;
}

input[type="radio"].is-invalid {
  border-color: #ef4444;
}

input[type="radio"].is-invalid + label {
  color: #ef4444;
  font-weight: bold;
}

button:focus .idle-caption {
  display: none;
}

.active-caption {
  display: none;
}

button:focus .active-caption {
  display: inline;
}

a .active {
  display: none;
}

a:focus .active {
  display: inline;
}

a:focus .active-hidden {
  display: none;
}

.field_with_errors input {
  border-color: red;
  color: red;
}

.error-message {
  display: none;
}

.field_with_errors .error-message {
  display: block;
}

table.divide-y tr:not(:last-child) {
  border-bottom: 1px solid #d2d6dc;
}

.dirty-warning {
  display: none;
}

form.is-dirty .dirty-warning {
  display: block;
}

.dropdown .dropdown-menu {
  display: none;
}

.dropdown.dropdown-active .dropdown-menu {
  display: block;
}