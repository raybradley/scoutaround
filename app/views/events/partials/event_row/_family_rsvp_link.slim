- return unless event.requires_rsvp && user_signed_in?

/ TODO: roll all this the FamilyRsvp object
- family_has_rsvps = false
- family_fully_responded = true
- event_rsvps = event.rsvps.includes(:unit_membership)
- rsvp_service = RsvpService.new(@current_member, event)
- @current_member.family.each do |member|
  - rsvp = event_rsvps.select { |r| r.unit_membership == member }&.first
  - family_has_rsvps = family_has_rsvps || rsvp.present?
  - family_fully_responded = family_fully_responded && rsvp.present?


- if event.rsvp_open?
  - if policy(event).rsvp?
    - if family_fully_responded
      = link_to new_unit_event_family_rsvp_path(@unit, event),
                class: "whitespace-nowrap block px-4 py-2 text-center rounded-lg font-semibold ring-1 ring-inset ring-amber-500 text-amber-700 hover:bg-amber-100 dark:text-amber-500 dark:hover:bg-amber-950",
                title: "#{rsvp_service.family_responses_in_words}",
                data: { turbo_frame: "modal" } do
        = t(".update")
      
    - else
      = link_to new_unit_event_family_rsvp_path(@unit, event),
                class: "whitespace-nowrap block px-4 py-2 text-center rounded-lg font-semibold bg-amber-400 hover:bg-amber-500 text-amber-950",
                title: "#{rsvp_service.family_responses_in_words}",
                data: { turbo_frame: "modal" } do
        = t(".new")

  .text-amber-600.whitespace-nowrap.text-center
    = render partial: "events/partials/event_row/rsvp_closes_at", locals: { event: event }

- else
  .font-semibold.text-sm
    i.fa-solid.fa-ban.mr-2
    = t("events.index.rsvp.closed")
