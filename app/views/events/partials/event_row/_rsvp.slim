- return unless event.requires_rsvp && user_signed_in?

- family_has_rsvps = false
- family_fully_responded = true
- event_rsvps = event.rsvps.includes(:unit_membership)
- @current_member.family.each do |member|
  - rsvp = event_rsvps.select { |r| r.unit_membership == member }&.first
  - family_has_rsvps = family_has_rsvps || rsvp.present?
  - family_fully_responded = family_fully_responded && rsvp.present?

.mb-2
  - if event.rsvp_open?
    - if policy(event).rsvp?
      details.group(class="#{family_fully_responded ? 'fully-responded' : 'response-needed' }")
        summary.rounded-lg.cursor-pointer.inline-block.px-4.py-2.mb-0.text-center.font-semibold.text-sm.bg-amber-200.hover:bg-amber-300.text-amber-900(class="group-[.response-needed]:text-amber-50 group-[.response-needed]:bg-amber-600 group-[.response-needed]:hover:bg-amber-700")
          i.fa-regular.fa-exclamation-circle.mr-2(class="group-[.fully-responded]:hidden")
          = family_fully_responded ? "Change RSVPs" : "RSVP Needed"

        = turbo_frame_tag "rsvp_#{event.id}_popup", src: popup_unit_event_rsvps_path(@unit, event), loading: :lazy, role: "dialog"

  - else
    .font-semibold.text-sm
      i.fa-solid.fa-ban.mr-2
      = t("events.index.rsvp.closed")
